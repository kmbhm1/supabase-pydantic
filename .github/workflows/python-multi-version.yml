name: Python Multi-Version Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: poetry install

    - name: Install tox directly
      run: pip install "tox>=4.11.3"

    - name: Run tests
      run: tox -e py$(echo ${{ matrix.python-version }} | tr -d '.')

    # Only run coverage report on Python 3.10
    - name: Run tests with coverage and analytics
      if: matrix.python-version == '3.10'
      id: coverage
      continue-on-error: true
      run: |
        poetry run pytest --cov=supabase_pydantic --cov-report=term-missing --cov-report=xml \
          --junit-xml=test-results.xml

        COVERAGE=$(cat coverage.xml | grep -o 'line-rate="[0-9]\.[0-9]\+"' | head -1 | cut -d'"' -f2)
        COVERAGE=$(echo "$COVERAGE * 100" | bc)
        echo "Coverage percentage is $COVERAGE%"
        if (( $(echo "$COVERAGE < 90" | bc -l) )); then
          echo "Coverage is below 90% threshold"
          exit 1
        fi

    - name: Upload coverage to Codecov
      if: always() && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v4
      with:
        verbose: true
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results to Codecov
      if: always() && matrix.python-version == '3.10'
      uses: codecov/test-results-action@v0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./test-results.xml
