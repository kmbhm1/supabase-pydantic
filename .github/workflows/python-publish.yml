name: Python package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install

      - name: Lint checking
        run: poetry run ruff check -v --output-format=github --exclude=poc .

      - name: Type checking
        run: poetry run mypy -v --exclude='^poc/' .

  release:
    needs: [lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      #----------------------------------------------
      #       Create GitHub App Token
      #----------------------------------------------
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.VERSION_BUMPER_APPID }}
          private-key: ${{ secrets.VERSION_BUMPER_SECRET }}

      #----------------------------------------------
      #       Checkout Code and Setup Python
      #----------------------------------------------
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # pulls all history and tags for Lerna to detect which packages changed
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #     Install Poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #   Install Dependencies & Build Package
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: List build artifacts
        run: ls -la dist/

      #----------------------------------------------
      #   Upload Coverage to Codecov
      #----------------------------------------------
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      #----------------------------------------------
      #   Python Semantic Release
      #----------------------------------------------
      - name: Python Semantic Release (Version)
        id: release
        uses: python-semantic-release/python-semantic-release@v8.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      #----------------------------------------------
      #   Publish to PyPI & GitHub Release
      #----------------------------------------------
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true
          print-hash: true

      - name: Publish package to GitHub Release
        uses: python-semantic-release/upload-to-gh-release@v9.8.5
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
